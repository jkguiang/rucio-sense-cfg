all.role server

cms.space min 512m 1g
cms.allow host *

# set site = $OSG_FQDN
all.sitename SITE_PLACEHOLDER

all.manager [REDI_IPV6_PLACEHOLDER] REDI_PORT_PLACEHOLDER

# GSI (x509)
acc.authdb /etc/xrootd/auth-file
ofs.authorize 1
sec.protocol /usr/lib64 gsi \
  -certdir:/etc/grid-security/certificates \
  -cert:/etc/grid-security/xrd/xrdcert.pem \
  -key:/etc/grid-security/xrd/xrdkey.pem \
  -crl:1 \
  -authzfun:libXrdLcmaps.so \
  -authzfunparms:lcmapscfg=/etc/lcmaps.db,loglevel=0,policy=authorize_only \
  -gmapopt:10 -gmapto:0

all.export /
oss.localroot /rucio

#xrd.network routes split use INTF_PLACEHOLDER
xrd.port PORT_PLACEHOLDER

macaroons.secretkey /etc/xrootd/macaroon-secret
ofs.authlib ++ libXrdMacaroons.so

if exec xrootd
  xrootd.seclib /usr/lib64/libXrdSec.so
  #xrootd.chksum max 1000 adler32 /etc/xrootd/checksum/adler.py
  xrd.protocol http:PORT_PLACEHOLDER /usr/lib64/libXrdHttp.so
  xrootd.bindif [IPV6_PLACEHOLDER]:PORT_PLACEHOLDER
  # HTTP
  http.header2cgi Authorization authz
  http.gridmap /etc/grid-security/grid-mapfile
  http.cadir /etc/grid-security/certificates
  http.cert /etc/grid-security/xrd/xrdcert.pem
  http.key /etc/grid-security/xrd/xrdkey.pem
  http.exthandler xrdtpc libXrdHttpTPC.so
  http.exthandler xrdmacaroons libXrdMacaroons.so
  http.listingdeny yes
  http.desthttps yes
  http.secxtractor /usr/lib64/libXrdLcmaps.so
fi

#xrd.trace all
#http.trace debug
#ofs.trace all
#cms.trace all debug
